//   This is a component for EMC2 HAL
//   Copyright 2019 Robert Ellenberg <rwe24g@gmail.com>
//   Based on Jeff Epler's ddt component
//
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
component d2dt2 "Compute two derivativse of the input function by first-order backward difference";

pin in float in;
pin out float out1;
pin out float out2;

variable double old0;
variable double old1;

function _;
license "GPL";
;;
double tmp = in;
// Introduces slight rounding error but is faster than division
const double dt_inv = 1.0e9 / period;
// Cascaded, 1st-order-accuracy backward difference
out1 = (tmp - old0) * dt_inv;
out2 = (out1 - old1) * dt_inv;
old0 = tmp;
old1 = out1;
